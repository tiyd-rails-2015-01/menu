rails generate model User name:string password_digest:string

--don't make a password field, make password_digest...converts a string to a different string

rake db:migrate

+in models

class User <ActiveRecord::Base
  has_secure_password

  validates :password, :length => {:minimum => 8}
  validates_confirmation_of :password
end

validations come into play when you try to save it, with min of 8, it returns false
second line lets you pass in a password confirmation...they have to match to save....doesn't mean you must confirm


me.password = "12345678"
me.password_confirmation = "1234456789"

fails

have to store whether or not they were authenticated in your session
can do me.errors
and see where it tells you what happened


--will try to store things in a field called password digest

--user.password= "Dog"

+in gemfile

Use ActiveModel has_secure_password
highlight/uncomment gem 'bcrypt'

now bundle install


in console
me = User.new
blows up because you need to have a password

me.password = "dog"

no password field, using password method
me.password
returns dog
bc you just set it
me.save
and then the password is that giant string of 255 characters which means dog

pearlharbor

change it in a way, the simplest is
qfbsmibscps Caesar cipher, could do a depth of something besides one

cryptography these days can't be reversed

pearlharbor goes to a;slkfjas;lfkjas;lkghgioaw , which never can be turned back into pearlharbor

if you type in pearlsarepretty  it compares that to the gibberish and sees if it matches

you can't figure out the algorithm bc of prime numbers and powers, RSA, stupid big numbers all the time

if you then do me.password, it blows up...there is a way, but best computers in the world need millions of years to break it
you can't return the password, but you can change it

how do you find out if their password is right?

user = User.find_by_email(params[:email])
user.authenticate(params[:password])
if you say dog, it gives you yourself back, which is truthy
if authenticate, then session[:user_id] = user.id


the if you've done this kind of thing before has the clone thing


but if you wrote it first, and want to put it up, do push an exisiting repository on the command line instructions

can type heroku log
